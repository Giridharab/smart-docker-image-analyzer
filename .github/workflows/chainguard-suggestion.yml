name: Chainguard Dockerfile Enforcement

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  check-dockerfiles:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Find Dockerfiles
        id: dockerfiles
        run: |
          files=$(find . -type f -name 'Dockerfile')
          echo "dockerfiles=$files" >> $GITHUB_OUTPUT

      - name: Analyze Dockerfiles
        id: analyze
        run: |
          set -e
          files=${{ steps.dockerfiles.outputs.dockerfiles }}
          issues=""
          for file in $files; do
            builder_line=$(grep -n '^FROM .* AS build' "$file" || true)
            runtime_line=$(grep -n '^FROM .*$' "$file" | tail -1 || true)

            builder_issue=""
            runtime_issue=""

            if [[ ! $builder_line =~ "chainguard/golang" ]]; then
              builder_issue="Builder stage not using Chainguard: ${builder_line:-missing}"
            fi

            if [[ ! $runtime_line =~ "chainguard/static" ]]; then
              runtime_issue="Runtime stage not using Chainguard: ${runtime_line:-missing}"
            fi

            if [[ -n $builder_issue || -n $runtime_issue ]]; then
              issues+="$file: $builder_issue $runtime_issue"$'\n'
            fi
          done
          echo "$issues" > dockerfile_issues.txt
          if [[ -s dockerfile_issues.txt ]]; then
            echo "Found Dockerfiles not using Chainguard:"
            cat dockerfile_issues.txt
          fi

      - name: Comment PR (if pull request)
        if: github.event_name == 'pull_request_target'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const issues = fs.readFileSync('dockerfile_issues.txt', 'utf8').trim();
            if (issues) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: "⚠️ Dockerfile Chainguard suggestions:\n```\n" + issues + "\n```"
              });
            }

      - name: Fail CI if Dockerfiles not using Chainguard
        if: github.event_name == 'push'
        run: |
          if [[ -s dockerfile_issues.txt ]]; then
            echo "ERROR: Some Dockerfiles are not using Chainguard images"
            cat dockerfile_issues.txt
            exit 1
          fi
